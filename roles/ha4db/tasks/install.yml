- name: chechout ha4db
  git:
    repo: https://github.com/ha4db/ha4db.git
    version: main
    dest: /home/appsrv/ha4db
  become_user: appsrv
  become: true
- name: bundle install
  command: bash -lc "bundle install"
  args:
    chdir: /home/appsrv/ha4db
  become_user: appsrv
  become: true
- name: check config/credentials/production.key
  stat:
    path: /home/appsrv/ha4db/config/credentials/production.key
  register: production_key_check
- name: create secret_key_base
  shell: bash -lc "ruby -e 'require :securerandom.to_s; puts SecureRandom.hex(128)'"
  args:
    chdir: /home/appsrv/ha4db
  become_user: appsrv
  become: true
  register: secret_key_base
- name: create postgresql_password
  shell: bash -lc "ruby -e 'require :securerandom.to_s; puts SecureRandom.alphanumeric(30)'"
  args:
    chdir: /home/appsrv/ha4db
  become_user: appsrv
  become: true
  register: postgresql_password
- name: editor environment
  set_fact:
    secret_key_base_editor_environment: "echo secret_key_base: {{ secret_key_base.stdout }} >>"
    postgresql_editor_environment: "echo database_url: postgis://ha4db:{{ postgresql_password.stdout }}@localhost/ha4db_production >>"
- name: generate production.key and enc with secret_key_base
  shell: bash -lc "EDITOR='{{ secret_key_base_editor_environment }}' bundle exec rails credentials:edit --environment production"
  args:
    chdir: /home/appsrv/ha4db
  become_user: appsrv
  become: true
  when: not production_key_check.stat.exists
- name: write postgresql database_url
  shell: bash -lc "EDITOR='{{ postgresql_editor_environment }}' bundle exec rails credentials:edit --environment production"
  args:
    chdir: /home/appsrv/ha4db
  become_user: appsrv
  become: true
  when: not production_key_check.stat.exists
- name: create deploy_path
  file:
    dest: /srv/ha4db/app
    state: directory
    owner: appsrv
- name: run deploy:check
  command: bash -lc "bundle exec cap production deploy:check"
  args:
    chdir: /home/appsrv/ha4db
  become_user: appsrv
  become: true
- name: create deploy_path shared/config/credentials
  file:
    dest: /srv/ha4db/app/shared/config/credentials
    state: directory
    owner: appsrv
- name: copy production.key
  ansible.builtin.copy:
    remote_src: yes
    src: /home/appsrv/ha4db/config/credentials/production.key
    dest: /srv/ha4db/app/shared/config/credentials/production.key
  become_user: appsrv
  become: true
- name: copy production.yml.enc
  ansible.builtin.copy:
    remote_src: yes
    src: /home/appsrv/ha4db/config/credentials/production.yml.enc
    dest: /srv/ha4db/app/shared/config/credentials/production.yml.enc
  become_user: appsrv
  become: true
- name: run deploy
  command: bash -lc "bundle exec cap production deploy"
  args:
    chdir: /home/appsrv/ha4db
  become_user: appsrv
  become: true

